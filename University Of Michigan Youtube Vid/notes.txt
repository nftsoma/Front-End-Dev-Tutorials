1. <!DOCTYPE html>
    a. always open the page with the requested language. in this case html is what we want.

2. <head>
        <meta charset="UTF-8">
        <title>My first page</title>
   </head>
        a. always remember the <meta charset="UTF-8">

3. <body>
   </body> 

----------COMMON TAGS

1. Headings (block)
    a. <h1><h2><h3><h4>
    b. these have syntax and semantics 

2. Paragraphs (block)
    a. <p> </p>
    b. should only contain inline elements 
    c. text, pictures, and other stuff, but not another paragraph inside of a paragraph

3. Divs (block)
    a. <div></div>
    b. generic section that is larger than a paragrah

4. Lists 
    A. Ordered Lists 
        a. <ol>
                <li>Item One</li>
                <li>Item Two</li>
           </ol>

    B. Unordered Lists
        a. <ul>
                <ul>Item One</li>
                <ul>Item Two</li>
           </ul>

5. Line Breaks
    A. <br>


----------Images

1. Images (inline)
    A. <img src = "myPicture.jpg" alt = "Image of Colleen"/>
        a. carefully size and name your picture before using them 
    B. Always remember its a name value pair 
        a. in the example above, the src is the name, and value is "myPicture.jpg"
           and the value always goes in double quotes 
    C. Always include an alt attribute 
        a. this is the information that is presented to someone using a screen reader even
           if the image is broken. 


----------Special Entities

1.  <   =   &lt;
2.  >   =   &gt;
3.      =   &copy;
4.  blank space    =    &nbsp;
5.      =   &cent;
6.  &   =   &amp;


----------REVIEW
Q: How do you know the difference between a tag and an attribute
    A: You have to look for the brackets
Q: What two symbols end a self-closing tag?
    A: The forward slash in the closing bracket



----------USING SEMANTIC TAGS

1. In the beginning( insert dramatic music of your choice...) there was a div
    A. <div> was a way to group related content together
    B. Divs almost always had special classes/ids associated with them  
        a. <div class = "header">   </div>
        b. <div class = "section">   </div>
        c. <div class = "footer">    </div>
            I. by breaking up the divs by header, section and footer, you can go back 
               and modify only that section of the code 


----------<header>

    A. A group of introductory or navigational aids: title, navigation links,etc

<header>
    <h1>This is the Title</h1>
    <h2>The author is Colleen</h2>
</header>

    B. Do not confuse header tag with the head tag. the head tag is only for metadata. 


----------<nav>

    A. this section goes to other links within the site itself
    B. often found in the header tag
        a. should the nav links include lists?


----------<footer>

    A. contains info such as copyright, docs, links to other socials 
    B. typically at the bottom 

----------REVIEW

        -Do not use divs as much
        -Use symantec tags for easier navigation 


----------Assignment
    A. create a page called index.html
    B. utilize header, main, footer
    C. make sure page validates 


----------Images

    A. JPEG(.jpg, and .jpeg), GIF, PNG 
    B. SVG and BMP 
    C. File extensions must be included 
    D. Every image must be downloaded so size can be a factor
        a. Think about how big it is on a smartphone, tablet, laptop, monitor 
    E. Every image requires an HTTP request

----------Image Sizes

    A. When you link to the image, the browsers displays the image as big(or small)as the file
        a. This is rarely optimal
    B. "Quick Solutions" - change file, use width/height attributes
        a. editors change the image permanently
        b. only works on local files

----------Image Attributes
    A. Always try to keep style out of your HTML files but..    
    B. <img> tag includes width and height

    EX-1: DEFAULT IMAGE SIZE
    <figure>
        <img src = "imgs/Ashtabula.jpg"
             alt = "My house">
        <figcaption>Default image size</figcaption>     
    </figure>

    C. in the above img function, make sure to always include the source, and make sure to point
       the file to the picture in question, and then make sure to include the alt text so that 
       if the image doesnt load, at least there will be something in that space

    EX-2: USING WIDTH IN PIXELS
    <figure>
        <img src = "imgs/Ashtabula.jpg"
             width = "500px" alt = "My house">
        <figcaption>Set image size</figcaption>     
    </figure>

    D. in the example above, the <img> tag gets an extra attribute added to it. I believe you   
       can do the same thing and add a height as well 

    EX-3: USING PERCENTAGES
    <figure>
        <img src = "imgs/Ashtabula.jpg"
             width = "50%" alt = "My house">
        <figcaption>Relative Image Size</figcaption>     
    </figure>

----------FAVICON
    A. You can put image/logo/icon next to the title
    B. Must go in <head> section 
        